
ðŸ“š Prefix Sum & Suffix Sum in C++

---

âœ… What is Prefix Sum?
Prefix Sum at index `i` is the sum of all elements from index 0 to i.

âœ… What is Suffix Sum?
Suffix Sum at index `i` is the sum of all elements from index i to the end.

---

ðŸ”§ Why Use Them?
- To answer range sum queries efficiently
- Reduce time complexity from O(n) to O(1) per query (after O(n) pre-processing)

---

âœ… Prefix Sum Code:

#include <iostream>
#include <vector>
using namespace std;

vector<int> computePrefixSum(const vector<int>& arr) {
    vector<int> prefix(arr.size());
    prefix[0] = arr[0];

    for (int i = 1; i < arr.size(); ++i) {
        prefix[i] = prefix[i - 1] + arr[i];
    }

    return prefix;
}

---

âœ… Suffix Sum Code:

vector<int> computeSuffixSum(const vector<int>& arr) {
    vector<int> suffix(arr.size());
    suffix[arr.size() - 1] = arr[arr.size() - 1];

    for (int i = arr.size() - 2; i >= 0; --i) {
        suffix[i] = suffix[i + 1] + arr[i];
    }

    return suffix;
}

---

âœ… Example Driver Code:

int main() {
    vector<int> arr = {1, 2, 3, 4, 5};

    vector<int> prefix = computePrefixSum(arr);
    vector<int> suffix = computeSuffixSum(arr);

    cout << "Prefix Sum: ";
    for (int x : prefix) cout << x << " ";
    cout << endl;

    cout << "Suffix Sum: ";
    for (int x : suffix) cout << x << " ";
    cout << endl;

    return 0;
}

---

ðŸ§  Output:
Prefix Sum: 1 3 6 10 15  
Suffix Sum: 15 14 12 9 5

---

ðŸ“Œ Use Case Example:
ðŸ‘‰ Query sum from index i to j = prefix[j] - prefix[i - 1] (i > 0)

---
